name: Update Docker Images and Notify Discord

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [merged]

permissions:
    contents: write
    pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changes
        run: |
            files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})
            {
              echo "FILES<<EOF"
              echo "${files}"
              echo "EOF"
            } >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Store Current Docker Output
        run: cp ${{ github.workspace }}/.github/logs/docker_output.json ${{ github.workspace }}/.github/logs/docker_output_old.json || echo "No old output to copy"

      - name: Build docker images
        run: python ${{ github.workspace }}/.github/scripts/build_dockers.py --files "${{ env.FILES }}" --output-file "${{ github.workspace }}/.github/logs/docker_output.json"

      - name: Check if Docker Output has changed and store bool
        run: |
          if cmp -s ${{ github.workspace }}/.github/logs/docker_output.json ${{ github.workspace }}/.github/logs/docker_output_old.json; then
            echo "DOCKER_OUTPUT_CHANGED=false" >> $GITHUB_ENV
          else
            echo "DOCKER_OUTPUT_CHANGED=true" >> $GITHUB_ENV
          fi

      - name: Get User Avatar URL
        if: env.DOCKER_OUTPUT_CHANGED == 'true'
        run: |
          AVATAR_URL=$(curl -s https://api.github.com/users/${{ github.actor }} | jq -r '.avatar_url')
          echo "AVATAR_URL=$AVATAR_URL" >> $GITHUB_ENV

      - name: Send notification to Discord
        if: env.DOCKER_OUTPUT_CHANGED == 'true'
        run: |
              export DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
                python ${{ github.workspace }}/.github/scripts/discord_notifications/send_notification.py \
                    --type "gradescope" \
                    --notification-info ${{ github.workspace }}/.github/scripts/discord_notifications/notification_info.md \
                    --payload "${{ github.workspace }}/.github/logs/docker_output.json" \
                    --author "${{ github.actor }}" \
                    --author-icon "$AVATAR_URL" \
                    --branch "${{ github.ref }}"

      - name: Commit Updated Output
        if: env.DOCKER_OUTPUT_CHANGED == 'true'
        run: |
          git config --global user.name "robbykap"
          git config --global user.email "robbykap@users.noreply.github.com"
          git config pull.rebase false  # Ensure merge strategy
          git add -u 
          git rm --cached -r  ${{ github.workspace }}/.github/scripts/discord_notifications/__pycache__
          git commit -m "Update Docker Output" || echo "No changes to commit"
          git pull --no-edit
          git push
