{
  "tests": [
    {
      "name": "numbers_divisible_by.going_up.stdout",
      "output": "Observed (left) == Expected (right)\n3                                                                          | 3                                                                         \n6                                                                          | 6                                                                         \n9                                                                          | 9                                                                         \n                                                                           |                                                                           ",
      "score": 6.0,
      "max_score": 6.0,
      "visibility": "visible"
    },
    {
      "name": "numbers_divisible_by.going_down.stdout",
      "output": "Observed (left) == Expected (right)\n9                                                                          | 9                                                                         \n6                                                                          | 6                                                                         \n3                                                                          | 3                                                                         \n                                                                           |                                                                           ",
      "score": 6.0,
      "max_score": 6.0,
      "visibility": "visible"
    },
    {
      "name": "numbers_divisible_by.going_up_includes_bounds.stdout",
      "output": "Observed (left) == Expected (right)\n2                                                                        | 2                                                                       \n4                                                                        | 4                                                                       \n6                                                                        | 6                                                                       \n8                                                                        | 8                                                                       \n                                                                         |                                                                         ",
      "score": 6.0,
      "max_score": 6.0,
      "visibility": "visible"
    },
    {
      "name": "numbers_divisible_by.going_down_includes_bounds.stdout",
      "output": "Observed (left) == Expected (right)\n16                                                                       | 16                                                                      \n12                                                                       | 12                                                                      \n8                                                                        | 8                                                                       \n                                                                         |                                                                         ",
      "score": 6.0,
      "max_score": 6.0,
      "visibility": "visible"
    },
    {
      "name": "numbers_divisible_by.negative_and_zero.stdout",
      "output": "Observed (left) == Expected (right)\n-15                                                         | -15                                                        \n-10                                                         | -10                                                        \n-5                                                          | -5                                                         \n0                                                           | 0                                                          \n5                                                           | 5                                                          \n10                                                          | 10                                                         \n15                                                          | 15                                                         \n                                                            |                                                            ",
      "score": 6.0,
      "max_score": 6.0,
      "visibility": "visible"
    },
    {
      "name": "collatz.starting_at_5.stdout",
      "output": "Observed (left) == Expected (right)\n5                                                                   | 5                                                                  \n16                                                                  | 16                                                                 \n8                                                                   | 8                                                                  \n4                                                                   | 4                                                                  \n2                                                                   | 2                                                                  \n1                                                                   | 1                                                                  \n                                                                    |                                                                    ",
      "score": 7.5,
      "max_score": 7.5,
      "visibility": "visible"
    },
    {
      "name": "collatz.starting_at_8.stdout",
      "output": "Observed (left) == Expected (right)\n8                                                                        | 8                                                                       \n4                                                                        | 4                                                                       \n2                                                                        | 2                                                                       \n1                                                                        | 1                                                                       \n                                                                         |                                                                         ",
      "score": 7.5,
      "max_score": 7.5,
      "visibility": "visible"
    },
    {
      "name": "collatz.starting_at_17.stdout",
      "output": "Observed (left) == Expected (right)\n17                                             | 17                                            \n52                                             | 52                                            \n26                                             | 26                                            \n13                                             | 13                                            \n40                                             | 40                                            \n20                                             | 20                                            \n10                                             | 10                                            \n5                                              | 5                                             \n16                                             | 16                                            \n8                                              | 8                                             \n4                                              | 4                                             \n2                                              | 2                                             \n1                                              | 1                                             \n                                               |                                               ",
      "score": 7.5,
      "max_score": 7.5,
      "visibility": "visible"
    },
    {
      "name": "collatz.starting_at_20.stdout",
      "output": "Observed (left) == Expected (right)\n20                                                            | 20                                                           \n10                                                            | 10                                                           \n5                                                             | 5                                                            \n16                                                            | 16                                                           \n8                                                             | 8                                                            \n4                                                             | 4                                                            \n2                                                             | 2                                                            \n1                                                             | 1                                                            \n                                                              |                                                              ",
      "score": 7.5,
      "max_score": 7.5,
      "visibility": "visible"
    },
    {
      "name": "sqrt.negative_input.stdout",
      "output": "Observed (left) == Expected (right)\nInput must be greater than 0                        | Input must be greater than 0                       \n                                                    |                                                    \nError: The program returned a non-zero exit code: 1 | Error: The program returned a non-zero exit code: 1",
      "score": 8.0,
      "max_score": 8.0,
      "visibility": "visible"
    },
    {
      "name": "sqrt.int_input.stdout",
      "output": "Observed (left) == Expected (right)\n4.5 (20.25)       | 4.5 (20.25)      \n2.25 (5.0625)     | 2.25 (5.0625)    \n3.375 (11.3906)   | 3.375 (11.3906)  \n2.8125 (7.91016)  | 2.8125 (7.91016) \n3.09375 (9.57129) | 3.09375 (9.57129)\n2.95312 (8.72095) | 2.95312 (8.72095)\n3.02344 (9.14117) | 3.02344 (9.14117)\n2.98828 (8.92982) | 2.98828 (8.92982)\n3.00586 (9.03519) | 3.00586 (9.03519)\n2.99707 (8.98243) | 2.99707 (8.98243)\n3.00146 (9.00879) | 3.00146 (9.00879)\n2.99927 (8.99561) | 2.99927 (8.99561)\n3.00037 (9.0022)  | 3.00037 (9.0022) \n2.99982 (8.9989)  | 2.99982 (8.9989) \n3.00009 (9.00055) | 3.00009 (9.00055)\n2.99995 (8.99973) | 2.99995 (8.99973)\n3.00002 (9.00014) | 3.00002 (9.00014)\n2.99999 (8.99993) | 2.99999 (8.99993)",
      "score": 8.0,
      "max_score": 8.0,
      "visibility": "visible"
    },
    {
      "name": "sqrt.double_input.stdout",
      "output": "Observed (left) == Expected (right)\n0.6685 (0.446892) | 0.6685 (0.446892)\n1.00275 (1.00551) | 1.00275 (1.00551)\n1.16987 (1.36861) | 1.16987 (1.36861)\n1.08631 (1.18007) | 1.08631 (1.18007)\n1.12809 (1.2726)  | 1.12809 (1.2726) \n1.14898 (1.32017) | 1.14898 (1.32017)\n1.15943 (1.34428) | 1.15943 (1.34428)\n1.15421 (1.33219) | 1.15421 (1.33219)\n1.15682 (1.33823) | 1.15682 (1.33823)\n1.15551 (1.33521) | 1.15551 (1.33521)\n1.15617 (1.33672) | 1.15617 (1.33672)\n1.15649 (1.33747) | 1.15649 (1.33747)\n1.15633 (1.3371)  | 1.15633 (1.3371) ",
      "score": 8.0,
      "max_score": 8.0,
      "visibility": "visible"
    },
    {
      "name": "sqrt.sqrt_11.stdout",
      "output": "Observed (left) == Expected (right)\n5.5 (30.25)       | 5.5 (30.25)      \n2.75 (7.5625)     | 2.75 (7.5625)    \n4.125 (17.0156)   | 4.125 (17.0156)  \n3.4375 (11.8164)  | 3.4375 (11.8164) \n3.09375 (9.57129) | 3.09375 (9.57129)\n3.26562 (10.6643) | 3.26562 (10.6643)\n3.35156 (11.233)  | 3.35156 (11.233) \n3.30859 (10.9468) | 3.30859 (10.9468)\n3.33008 (11.0894) | 3.33008 (11.0894)\n3.31934 (11.018)  | 3.31934 (11.018) \n3.31396 (10.9824) | 3.31396 (10.9824)\n3.31665 (11.0002) | 3.31665 (11.0002)\n3.31531 (10.9913) | 3.31531 (10.9913)\n3.31598 (10.9957) | 3.31598 (10.9957)\n3.31631 (10.9979) | 3.31631 (10.9979)\n3.31648 (10.9991) | 3.31648 (10.9991)\n3.31657 (10.9996) | 3.31657 (10.9996)\n3.31661 (10.9999) | 3.31661 (10.9999)\n3.31663 (11)      | 3.31663 (11)     ",
      "score": 8.0,
      "max_score": 8.0,
      "visibility": "visible"
    },
    {
      "name": "sqrt.sqrt_12.25.stdout",
      "output": "Observed (left) == Expected (right)\n6.125 (37.5156)   | 6.125 (37.5156)  \n3.0625 (9.37891)  | 3.0625 (9.37891) \n4.59375 (21.1025) | 4.59375 (21.1025)\n3.82812 (14.6545) | 3.82812 (14.6545)\n3.44531 (11.8702) | 3.44531 (11.8702)\n3.63672 (13.2257) | 3.63672 (13.2257)\n3.54102 (12.5388) | 3.54102 (12.5388)\n3.49316 (12.2022) | 3.49316 (12.2022)\n3.51709 (12.3699) | 3.51709 (12.3699)\n3.50513 (12.2859) | 3.50513 (12.2859)\n3.49915 (12.244)  | 3.49915 (12.244) \n3.50214 (12.265)  | 3.50214 (12.265) \n3.50064 (12.2545) | 3.50064 (12.2545)\n3.49989 (12.2493) | 3.49989 (12.2493)\n3.50027 (12.2519) | 3.50027 (12.2519)\n3.50008 (12.2506) | 3.50008 (12.2506)\n3.49999 (12.2499) | 3.49999 (12.2499)",
      "score": 8.0,
      "max_score": 8.0,
      "visibility": "visible"
    }
  ]
}